name: Run API tests and upload coverage

on:
  push:
    branches:
      - master

jobs:
  test:
    name: Run API tests and collect coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/api

    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: mongodb://localhost:27017/task-app-test
      PORT: 5000
      JWT_AUTH_SECRET: test_jwt_auth_secret_key
      JWT_AUTH_EXPIRES_IN: 1d
      JWT_INVITE_SECRET: test_jwt_invite_secret_key
      JWT_INVITE_EXPIRES_IN: 1d
      FRONTEND_URL: http://localhost:3000
      API_URL: http://localhost:5000
      NODE_ENV: test
      MAIL_HOST: localhost
      MAIL_PORT: 1025
      MAIL_USER: test@example.com
      MAIL_PASS: test_password

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.6.4

      - name: Install dependencies
        run: pnpm install

      - name: Create test environment file
        run: |
          cat > .env.test << EOL
          DATABASE_URL=mongodb://localhost:27017/task-app-test
          PORT=5000
          JWT_AUTH_SECRET=test_jwt_auth_secret_key
          JWT_AUTH_EXPIRES_IN=1d
          JWT_INVITE_SECRET=test_jwt_invite_secret_key
          JWT_INVITE_EXPIRES_IN=1d
          FRONTEND_URL=http://localhost:3000
          API_URL=http://localhost:5000
          NODE_ENV=test
          MAIL_HOST=localhost
          MAIL_PORT=1025
          MAIL_USER=test@example.com
          MAIL_PASS=test_password
          EOL

          echo "Test environment file created:"
          cat .env.test

      - name: Modify mail service for testing
        run: |
          mkdir -p ./src/mocks
          cat > ./src/mocks/mail.mock.ts << EOL
          export const mockSendMail = jest.fn().mockImplementation(() => Promise.resolve());

          export const mockMailService = {
            sendMail: mockSendMail
          };
          EOL

      - name: Run tests
        run: pnpm test:coverage || true

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./apps/api/coverage/
